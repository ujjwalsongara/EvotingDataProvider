#name: Test Project
#
#on:
#  pull_request:
#    branches:
#      -main
#
#    jobs:
#      test:
#        runs-on: ubuntu-latest
#        container:
#          image: node:20
#          Steps:
#            - users: actions/checkout@v3
#              with:
#                node-version: 20
#              -run : npm ci
#                - run: npm test
#                       - name: Get ssh key set permission
#                run : |
#                  mkdir -p ~/.ssh
#                  echo "{{secrets.SSH_PRIVATE_KEY}}">~/.ssh/id_rss && chmod 600 ~/.ssh/i

name: Selenium Test Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # or you can use 'windows-latest' or 'macos-latest'

    steps:
      # Checkout the code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Java (version 17 or your desired version)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Cache Maven dependencies (optional)
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Install dependencies and run tests with Maven
      - name: Run Tests with Maven
        run: mvn clean test

      # Optional: Publish test results to GitHub Actions (JUnit format)
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-classes
